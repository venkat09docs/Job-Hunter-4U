import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.38.4';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
const supabaseKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;
const supabase = createClient(supabaseUrl, supabaseKey);

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message, userId, context } = await req.json();
    
    console.log('AI assistant request:', { message, userId, context });

    if (!userId) {
      return new Response(JSON.stringify({ 
        error: 'User authentication required to use AI Assistant.' 
      }), {
        status: 401,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    // Check user subscription status
    const { data: profile } = await supabase
      .from('profiles')
      .select('subscription_status, subscription_tier, industry')
      .eq('id', userId)
      .single();

    console.log('User profile data:', profile);

    // Check if user has admin role first
    const { data: userRole } = await supabase
      .from('user_roles')
      .select('role')
      .eq('user_id', userId)
      .single();

    console.log('User role data:', userRole);

    // Allow access for admins or users with active subscription
    const isAdmin = userRole?.role === 'admin';
    const hasActiveSubscription = profile?.subscription_status === 'active';

    if (!isAdmin && (!profile || !hasActiveSubscription)) {
      console.log('Access denied - not admin and no active subscription');
      return new Response(JSON.stringify({ 
        error: 'AI Assistant is available only for subscribed users. Please upgrade your plan to access this feature.' 
      }), {
        status: 403,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    console.log('Access granted - admin or active subscription');

    // Fetch user data for contextual responses
    const [userPointsRes, jobsRes, linkedinProgressRes, resumeProgressRes, githubProgressRes, assignmentsRes] = await Promise.all([
      // User points
      supabase
        .from('user_activity_points')
        .select('points_earned')
        .eq('user_id', userId),
      
      // Job applications - using job_hunting_pipeline instead
      supabase
        .from('job_hunting_pipeline')
        .select('pipeline_stage as status, company_name as company, job_title as position')
        .eq('user_id', userId)
        .limit(10),
      
      // LinkedIn progress
      supabase
        .from('linkedin_progress')
        .select('*')
        .eq('user_id', userId),
      
      // Resume progress - using profiles table instead
      supabase
        .from('profiles')
        .select('resume_completion_percentage')
        .eq('id', userId)
        .maybeSingle(),
      
      // GitHub progress
      supabase
        .from('github_progress')
        .select('*')
        .eq('user_id', userId),
      
      // Career assignments - using career_task_assignments instead
      supabase
        .from('career_task_assignments')
        .select(`
          id,
          status,
          due_date,
          career_task_templates(title, category)
        `)
        .eq('user_id', userId)
        .limit(5)
    ]);

    console.log('Data fetch results:', {
      userPoints: userPointsRes.data?.length || 0,
      jobs: jobsRes.data?.length || 0,
      linkedinProgress: linkedinProgressRes.data?.length || 0,
      resumeProgress: resumeProgressRes.data,
      githubProgress: githubProgressRes.data?.length || 0,
      assignments: assignmentsRes.data?.length || 0
    });

    const totalPoints = userPointsRes.data?.reduce((sum, record) => sum + (record.points_earned || 0), 0) || 0;
    const jobs = jobsRes.data || [];
    const linkedinProgress = linkedinProgressRes.data || [];
    const resumeProgress = resumeProgressRes.data;
    const githubProgress = githubProgressRes.data || [];
    const assignments = assignmentsRes.data || [];

    // Calculate progress statistics
    const completedLinkedInTasks = linkedinProgress.filter(task => task.completed).length;
    const totalLinkedInTasks = linkedinProgress.length;
    const linkedinProgressPercent = totalLinkedInTasks > 0 ? Math.round((completedLinkedInTasks / totalLinkedInTasks) * 100) : 0;
    
    const resumeProgressPercent = resumeProgress?.resume_completion_percentage || 0;
    
    const completedAssignments = assignments.filter(a => a.status === 'completed' || a.status === 'verified').length;
    const totalAssignments = assignments.length;
    
    const jobsByStatus = jobs.reduce((acc, job) => {
      acc[job.status] = (acc[job.status] || 0) + 1;
      return acc;
    }, {});

    const lowerMessage = message.toLowerCase();
    let aiResponse = '';

    // Enhanced AI responses with contextual data
    if (lowerMessage.includes('resume') || lowerMessage.includes('cv')) {
      if (lowerMessage.includes('progress') || lowerMessage.includes('status')) {
        aiResponse = `üìù **Your Resume Progress:**\n\n**Current Status:** ${resumeProgressPercent}% complete\n\n`;
        if (resumeProgressPercent < 50) {
          aiResponse += "üö® **Action Required:** Your resume needs attention!\n‚Ä¢ Visit 'Resume Builder' to continue building\n‚Ä¢ Complete missing sections for better ATS compatibility\n‚Ä¢ Aim for at least 80% completion\n\n**Next Steps:**\n‚Ä¢ Add work experience details\n‚Ä¢ Include relevant skills and certifications\n‚Ä¢ Write a compelling summary";
        } else if (resumeProgressPercent < 80) {
          aiResponse += "üìà **Good Progress!** You're halfway there!\n‚Ä¢ Complete remaining sections\n‚Ä¢ Review and optimize existing content\n‚Ä¢ Add quantifiable achievements\n\n**Tips:**\n‚Ä¢ Use action verbs and numbers\n‚Ä¢ Tailor keywords for your target roles\n‚Ä¢ Proofread for errors";
        } else {
          aiResponse += "üéâ **Excellent Work!** Your resume is almost complete!\n‚Ä¢ Review all sections for accuracy\n‚Ä¢ Customize for each job application\n‚Ä¢ Download in multiple formats\n\n**Pro Tips:**\n‚Ä¢ Create role-specific versions\n‚Ä¢ Update regularly with new achievements\n‚Ä¢ Test ATS compatibility";
        }
      } else {
        aiResponse = `üìù **Resume Building Help:**\n\n**Your Current Progress:** ${resumeProgressPercent}% complete\n\n**Our Resume Builder Features:**\n‚Ä¢ ATS-friendly templates\n‚Ä¢ Real-time completion tracking\n‚Ä¢ Multiple export formats (PDF, Word)\n‚Ä¢ Industry-specific guidance\n\n**Best Practices:**\n‚Ä¢ Use bullet points with measurable results\n‚Ä¢ Include relevant keywords from job descriptions\n‚Ä¢ Keep it 1-2 pages maximum\n‚Ä¢ Professional formatting and layout\n\n**Track Progress:** Visit 'Build My Profile' to see your completion percentage and earn points!`;
      }
    } else if (lowerMessage.includes('linkedin')) {
      if (lowerMessage.includes('progress') || lowerMessage.includes('status')) {
        aiResponse = `üíº **Your LinkedIn Progress:**\n\n**Tasks Completed:** ${completedLinkedInTasks}/${totalLinkedInTasks} (${linkedinProgressPercent}%)\n\n`;
        if (linkedinProgressPercent < 50) {
          aiResponse += "üö® **Needs Attention:** Your LinkedIn profile needs work!\n‚Ä¢ Complete daily LinkedIn activities\n‚Ä¢ Optimize profile sections\n‚Ä¢ Start networking consistently\n\n**Immediate Actions:**\n‚Ä¢ Update headline and summary\n‚Ä¢ Add professional photo\n‚Ä¢ Complete experience section\n‚Ä¢ Start connecting with industry professionals";
        } else {
          aiResponse += "üìà **Great Progress!** Keep up the momentum!\n‚Ä¢ Continue daily networking activities\n‚Ä¢ Engage with industry content\n‚Ä¢ Share valuable insights\n\n**Advanced Tips:**\n‚Ä¢ Join relevant LinkedIn groups\n‚Ä¢ Publish articles in your expertise area\n‚Ä¢ Request recommendations from colleagues\n‚Ä¢ Use LinkedIn messaging for warm outreach";
        }
      } else {
        aiResponse = `üíº **LinkedIn Optimization Help:**\n\n**Your Progress:** ${linkedinProgressPercent}% LinkedIn tasks completed\n\n**Our LinkedIn Tools:**\n‚Ä¢ Daily activity tracker\n‚Ä¢ Weekly networking assignments\n‚Ä¢ Connection growth monitoring\n‚Ä¢ Content engagement metrics\n\n**Optimization Checklist:**\n‚úì Professional headshot (14x more profile views)\n‚úì Compelling headline with keywords\n‚úì Detailed summary (3-5 sentences)\n‚úì Complete work experience\n‚úì Skills and endorsements\n‚úì Regular content posting\n\n**Daily Activities:** Use our tracker to monitor networking progress!`;
      }
    } else if (lowerMessage.includes('github') && profile.industry === 'IT') {
      const completedGitHubTasks = githubProgress.filter(task => task.completed).length;
      const githubProgressPercent = githubProgress.length > 0 ? Math.round((completedGitHubTasks / githubProgress.length) * 100) : 0;
      
      aiResponse = `üíª **GitHub Profile Enhancement:**\n\n**Your Progress:** ${githubProgressPercent}% GitHub tasks completed\n\n**Our GitHub Tools:**\n‚Ä¢ Weekly coding assignments\n‚Ä¢ Repository tracking\n‚Ä¢ Contribution monitoring\n‚Ä¢ Profile optimization guidance\n\n**Profile Optimization:**\n‚Ä¢ Create compelling profile README\n‚Ä¢ Pin your best 6 repositories\n‚Ä¢ Use descriptive repo names and descriptions\n‚Ä¢ Include live demo links\n‚Ä¢ Write clear documentation\n\n**Activity Tips:**\n‚Ä¢ Commit code regularly (green squares!)\n‚Ä¢ Contribute to open-source projects\n‚Ä¢ Showcase diverse skill sets\n‚Ä¢ Use meaningful commit messages\n\n**Track Progress:** Monitor your GitHub activity in our dashboard!`;
    } else if (lowerMessage.includes('job') && (lowerMessage.includes('search') || lowerMessage.includes('hunt') || lowerMessage.includes('application'))) {
      const totalJobs = jobs.length;
      if (lowerMessage.includes('progress') || lowerMessage.includes('status')) {
        aiResponse = `üìä **Your Job Search Progress:**\n\n**Applications Submitted:** ${totalJobs}\n`;
        if (jobsByStatus.wishlist) aiResponse += `‚Ä¢ Wishlist: ${jobsByStatus.wishlist}\n`;
        if (jobsByStatus.applied) aiResponse += `‚Ä¢ Applied: ${jobsByStatus.applied}\n`;
        if (jobsByStatus.interviewing) aiResponse += `‚Ä¢ Interviewing: ${jobsByStatus.interviewing}\n`;
        if (jobsByStatus.offered) aiResponse += `‚Ä¢ Offers: ${jobsByStatus.offered}\n`;
        if (jobsByStatus.rejected) aiResponse += `‚Ä¢ Rejected: ${jobsByStatus.rejected}\n`;
        
        aiResponse += `\n**Recent Applications:**\n`;
        jobs.slice(0, 3).forEach(job => {
          aiResponse += `‚Ä¢ ${job.position} at ${job.company} - ${job.status}\n`;
        });
        
        if (totalJobs < 10) {
          aiResponse += `\nüö® **Action Needed:** Apply to more positions!\n‚Ä¢ Target: 5-10 applications daily\n‚Ä¢ Use our Job Tracker to organize\n‚Ä¢ Check internal opportunities section`;
        } else {
          aiResponse += `\nüìà **Good Activity!** Keep applying consistently!\n‚Ä¢ Follow up on pending applications\n‚Ä¢ Prepare for upcoming interviews\n‚Ä¢ Network to unlock hidden opportunities`;
        }
      } else {
        aiResponse = `üéØ **Job Search Strategy:**\n\n**Your Current Activity:** ${totalJobs} applications tracked\n\n**Our Job Search Tools:**\n‚Ä¢ Job Tracker for application management\n‚Ä¢ Internal job opportunities database\n‚Ä¢ Resume Builder for ATS optimization\n‚Ä¢ LinkedIn networking tools\n‚Ä¢ Interview preparation resources\n\n**Strategy Tips:**\n‚Ä¢ Apply to 5-10 jobs daily\n‚Ä¢ Customize resume for each application\n‚Ä¢ Use our internal job board first\n‚Ä¢ Network your way to opportunities\n‚Ä¢ Track all interactions\n\n**Points System:** Earn 20 points for wishlist‚Üíapplied, 20 more for applied‚Üíinterviewing!`;
      }
    } else if (lowerMessage.includes('assignment') || lowerMessage.includes('task')) {
      aiResponse = `üìã **Your Career Assignments:**\n\n**Active Assignments:** ${totalAssignments}\n**Completed:** ${completedAssignments}/${totalAssignments}\n\n`;
      if (assignments.length > 0) {
        aiResponse += "**Current Tasks:**\n";
        assignments.forEach(assignment => {
          const statusIcon = (assignment.status === 'completed' || assignment.status === 'verified') ? "‚úÖ" : "‚è≥";
          const dueDate = assignment.due_date ? new Date(assignment.due_date).toLocaleDateString() : "No deadline";
          const title = assignment.career_task_templates?.title || 'Unknown Task';
          const category = assignment.career_task_templates?.category || 'General';
          aiResponse += `${statusIcon} ${title} (${category}) - Due: ${dueDate}\n`;
        });
        
        const pendingTasks = assignments.filter(a => a.status !== 'completed' && a.status !== 'verified');
        if (pendingTasks.length > 0) {
          aiResponse += `\nüéØ **Priority Actions:**\n‚Ä¢ Complete ${pendingTasks.length} pending assignments\n‚Ä¢ Focus on upcoming deadlines\n‚Ä¢ Earn points for each completion\n\n**Categories:** LinkedIn Growth, Networking, Job Hunting, Content Creation, Interview Prep`;
        } else {
          aiResponse += `\nüéâ **All Caught Up!** Excellent work!\n‚Ä¢ Check for new weekly assignments\n‚Ä¢ Maintain consistency in daily activities\n‚Ä¢ Help others in the community`;
        }
      } else {
        aiResponse += "**No active assignments found.**\n\nüöÄ **Get Started:**\n‚Ä¢ Visit Career Assignments to begin\n‚Ä¢ Complete weekly tasks for points\n‚Ä¢ Build your professional profile\n‚Ä¢ Track progress in your dashboard";
      }
    } else if (lowerMessage.includes('points') || lowerMessage.includes('score') || lowerMessage.includes('progress')) {
      aiResponse = `üèÜ **Your Progress Overview:**\n\n**Total Points Earned:** ${totalPoints}\n**Resume Progress:** ${resumeProgressPercent}%\n**LinkedIn Tasks:** ${linkedinProgressPercent}% complete\n**Job Applications:** ${totalJobs} tracked\n**Active Assignments:** ${totalAssignments} (${completedAssignments} completed)\n\n`;
      
      if (totalPoints < 100) {
        aiResponse += "üöÄ **Getting Started!** Here's how to earn more points:\n‚Ä¢ Complete daily LinkedIn activities (5-10 points each)\n‚Ä¢ Apply to jobs and track progress (20 points per status change)\n‚Ä¢ Build your resume (points for completion milestones)\n‚Ä¢ Complete weekly assignments (10-50 points each)\n‚Ä¢ Engage with platform features consistently";
      } else if (totalPoints < 500) {
        aiResponse += "üìà **Building Momentum!** Great progress so far:\n‚Ä¢ Continue daily activities for consistent points\n‚Ä¢ Focus on completing pending assignments\n‚Ä¢ Optimize your profiles for bonus points\n‚Ä¢ Help others and engage in community features\n‚Ä¢ Maintain streak bonuses for extra rewards";
      } else {
        aiResponse += "üåü **Excellent Performance!** You're a top performer:\n‚Ä¢ Maintain your consistency streak\n‚Ä¢ Mentor newcomers for leadership points\n‚Ä¢ Explore advanced features and challenges\n‚Ä¢ Share your success stories\n‚Ä¢ Aim for leaderboard positions";
      }
      
      aiResponse += `\n\n**Quick Point Boosters:**\n‚Ä¢ Complete resume to 100% (+50 points)\n‚Ä¢ Connect with 10 professionals (+20 points)\n‚Ä¢ Apply to 5 jobs in one day (+25 points)\n‚Ä¢ Finish all weekly assignments (+100 points)`;
    } else if (lowerMessage.includes('help') || lowerMessage.includes('features') || lowerMessage.includes('what can')) {
      aiResponse = `ü§ñ **Career Growth Platform - Complete Feature Guide:**\n\n**üìä Your Dashboard Overview:**\n‚Ä¢ Total Points: ${totalPoints}\n‚Ä¢ Resume Progress: ${resumeProgressPercent}%\n‚Ä¢ Job Applications: ${totalJobs}\n‚Ä¢ LinkedIn Progress: ${linkedinProgressPercent}%\n\n**üõ†Ô∏è Platform Features:**\n\n**üìù Resume Builder:**\n‚Ä¢ ATS-friendly templates\n‚Ä¢ Real-time completion tracking\n‚Ä¢ Multiple export formats\n‚Ä¢ Industry-specific guidance\n\n**üíº LinkedIn Optimization:**\n‚Ä¢ Daily activity tracking\n‚Ä¢ Weekly networking assignments\n‚Ä¢ Connection growth monitoring\n‚Ä¢ Content engagement tools\n\n**üéØ Job Tracker:**\n‚Ä¢ Application status management\n‚Ä¢ Follow-up reminders\n‚Ä¢ Internal job opportunities\n‚Ä¢ Interview tracking\n‚Ä¢ Points for status transitions (20 points each)\n\n**üìà Career Growth:**\n‚Ä¢ Daily activities and challenges\n‚Ä¢ Weekly assignments\n‚Ä¢ Skill development tracking\n‚Ä¢ Learning goals management\n\n**üèÜ Gamification:**\n‚Ä¢ Points system for all activities\n‚Ä¢ Leaderboards and rankings\n‚Ä¢ Achievement badges\n‚Ä¢ Progress visualization\n\n${profile.industry === 'IT' ? '**üíª GitHub Tools:**\n‚Ä¢ Repository tracking\n‚Ä¢ Contribution monitoring\n‚Ä¢ Profile optimization\n‚Ä¢ Weekly coding challenges\n\n' : ''}**üí° AI Assistant (Premium):**\n‚Ä¢ Personalized career guidance\n‚Ä¢ Progress-based recommendations\n‚Ä¢ Feature explanations\n‚Ä¢ Strategic advice\n\n**üéì Learning Resources:**\n‚Ä¢ Industry-specific tips\n‚Ä¢ Best practice guides\n‚Ä¢ Template libraries\n‚Ä¢ Success stories\n\n**Ask me anything about:** Resume building, LinkedIn optimization, job searching, career growth, platform features, progress tracking, assignments, or specific guidance!`;
    } else {
      // Generic helpful response
      aiResponse = `ü§ñ **I'm here to help with your career growth!**\n\n**Your Current Status:**\n‚Ä¢ Points: ${totalPoints}\n‚Ä¢ Resume: ${resumeProgressPercent}% complete\n‚Ä¢ LinkedIn: ${linkedinProgressPercent}% tasks done\n‚Ä¢ Job Applications: ${totalJobs} tracked\n\n**I can help you with:**\n‚Ä¢ Resume building and optimization\n‚Ä¢ LinkedIn profile enhancement\n‚Ä¢ Job search strategies\n‚Ä¢ Career development planning\n‚Ä¢ Platform feature explanations\n‚Ä¢ Progress tracking and goals${profile.industry === 'IT' ? '\n‚Ä¢ GitHub profile optimization' : ''}\n\n**Your Question:** "${message}"\n\n**How can I assist you specifically?** Ask about:\n‚úì Resume progress and tips\n‚úì LinkedIn networking strategies\n‚úì Job application tracking\n‚úì Assignment completion\n‚úì Points and achievements\n‚úì Platform features\n‚úì Career growth advice\n\nI'm designed to help only with career development topics related to our platform. Let me know what specific area you'd like guidance on!`;
    }

    const response = {
      response: aiResponse,
      timestamp: new Date().toISOString(),
      context: {
        ...context,
        userStats: {
          totalPoints,
          resumeProgress: resumeProgressPercent,
          linkedinProgress: linkedinProgressPercent,
          jobApplications: totalJobs,
          assignments: { completed: completedAssignments, total: totalAssignments }
        }
      }
    };

    return new Response(JSON.stringify(response), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in ai-assistant function:', error);
    return new Response(JSON.stringify({ 
      error: 'Sorry, I encountered an error. Please try again or contact support if the issue persists.' 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});